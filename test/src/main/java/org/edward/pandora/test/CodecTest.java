package org.edward.pandora.test;

import org.edward.pandora.common.codec.HybridCodec;
import org.edward.pandora.common.codec.HybridResult;
import org.edward.pandora.common.codec.rsa.KeyGenerator;

import java.nio.charset.StandardCharsets;

public class CodecTest {
    public static void main(String[] args) throws Exception {
        String publicKey1 = "MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA0+fVvqqwtS/EhnFE5fOYwtV22wW4ypMN6wCqvDujsltaf4g2R1AqllzbxVk8o66tBZbSaDua9+Ktk2wxAysj6rOIUEiJ7kbF+HFhIcNOKdqa+j7wEwvleyfyitPZG+NJHIMD2d2ocbENfcf9AHsTId78D6bGlS2bJ/C64iRCdLCbSLuwYusljIx8It22byf95UzP87DtCRVwb3deizoPlHQgsZsmY4GO6mztA3Y5/n6RMaIrwSowPYL9Bx+R1fHmphpZbmXQtsIh6VrikqdF9jnd+DDMz5ExPy8zbowBwukSDqoO68mLHh5U0tFsjd5k4Tp+BJ1zHXyIAXUxyVPeCwIDAQAB";
        String privateKey1 = "MIIEwAIBADANBgkqhkiG9w0BAQEFAASCBKowggSmAgEAAoIBAQDT59W+qrC1L8SGcUTl85jC1XbbBbjKkw3rAKq8O6OyW1p/iDZHUCqWXNvFWTyjrq0FltJoO5r34q2TbDEDKyPqs4hQSInuRsX4cWEhw04p2pr6PvATC+V7J/KK09kb40kcgwPZ3ahxsQ19x/0AexMh3vwPpsaVLZsn8LriJEJ0sJtIu7Bi6yWMjHwi3bZvJ/3lTM/zsO0JFXBvd16LOg+UdCCxmyZjgY7qbO0Ddjn+fpExoivBKjA9gv0HH5HV8eamGlluZdC2wiHpWuKSp0X2Od34MMzPkTE/LzNujAHC6RIOqg7ryYseHlTS0WyN3mThOn4EnXMdfIgBdTHJU94LAgMBAAECggEBALB8uynU0d3lzeFHP2Hhs4456YbbSh/1wDbE1G53oYvvx/zFvqdAXmfjKOtBul59If+wsMc9NYFVWsmY521DJePY6SQsdixs539XNtW+6z+yoTbg6mSCmPsstzXm4UD32LGVcMSodx1Rn/HteYtH9hRUukxy05v1Yu8t8QhduLejx4cUIrwmtQHxfLooArvsT7bFWvCSD8aPRQueQgPQMeqc6RcH9pKWAKIiU0h0TPgoD4IDsyWYIb499IdkNRg/HKODzyS2HLgkx5wfTyc/1eRRellxs03ZLxBE7Dyz+GzREZLebGcXPkGPTlZLhtx2t7duAO/djXW21nQ7FliLlSkCgYEA6jqZ+Rhmoq/6Jo79HFNDWOv+zj602VwVkYma25g9ovB5oYBlzzhWUMxX3lqoi3ifpLBckmgOAaahXxkuC73YRpZjeewDCrxDlT4Ov8iZY29l6XNPX+7RlKjkTBXJP84/8B6hC/wULvCBHkfTTQZvsPgyxcwICG/K2k+rWgQPPf8CgYEA55oO0NPN5rTJrwsGqHOcqZMPYsASc6RMlEdi0HxTTOrl/QhfEfpFmZogWCnrVwgVAJjWs2LcCKnXExr9C4yH7q7w+cfljNtD6QbyduiLbwI32x9c7ldMSEtdEOvr1T4O+fM5d+aFrchA7SUI/Ulf/ABNw72UI7Th8Y4nugcUd/UCgYEAi83Qi2JqGF6rE4qzPs3f29p4awf4j+gro4Obn8iduXyJTMFDg0zgEDf3lmtMQHsN5pGxn11mRsv7c7SmzDFTPsaSt3oMUsMOH607xnLoQvaBwLanwN3d0DqCkXtLdL8ZYKwXefzK2z2IA9fhIg9eaSWrwG3IuahoTqfQ4dicdGcCgYEAoz3qLXTszy0kbvWVlswOY1PdZ1w8ZTgsJeN/GbZXvIJg4w2wfOprfk2teJbrYye2LfqMclo+/vg/OR8vtqEx+qFiBpzIBpVR84DLC9by2Ka2mgMsLG5pvRcpnNC9JEueoLy4B/P6yze3067j/CtotSW9qjcIoHZRP0JUbAGrgrUCgYEAy0vBDjMd4HlX6wnX9MQ4QRylHthebbXD4diqXLOoy2Rxca9K69oXdqs1Y/svgqjCaWZPw/e2hN2VJGk5G3+RGcQWGKOf9SFtcKSE4u928krqX3UZK1iu8W0Mm8bkv2wNzh8FaWrXbrgguwZBZ3ZVTuBC/uguRdKuKjQNrJLh1hs=";
        String publicKey2 = "MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAoAHZYqYJrdTVG2OpA7qA+mRvJ1Srdlr9mp4FvD0DhcBDktQlybSyTZ/wq0DQJbqUcJlFlfVAHmlEi17J9HG82iCZ0g6XoR4XM/yFX+3nfSpXICN0d1icOo8J2GitvBK54BrNaqY4FmIqZO8UhRr3BBD15eC1ryXfDJ/ApIqsRBvF/sB5/v0LsM9T+rRIZTCWtRpYrxKMCauRbAKuTJlQa9D5HWsvwVYumOMs7xuI4m6viNgsNIOq8kIbKcVafB+jR6YBAqOjdvKVzor9YkGCC8kL+/cmKhuR6377zoBuVE4OMzwoJUEEne5No6cK8dxpsU2OuWO1LQa4ScDQcg9sawIDAQAB";
        String privateKey2 = "MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCgAdlipgmt1NUbY6kDuoD6ZG8nVKt2Wv2angW8PQOFwEOS1CXJtLJNn/CrQNAlupRwmUWV9UAeaUSLXsn0cbzaIJnSDpehHhcz/IVf7ed9KlcgI3R3WJw6jwnYaK28ErngGs1qpjgWYipk7xSFGvcEEPXl4LWvJd8Mn8CkiqxEG8X+wHn+/Quwz1P6tEhlMJa1GlivEowJq5FsAq5MmVBr0Pkday/BVi6Y4yzvG4jibq+I2Cw0g6ryQhspxVp8H6NHpgECo6N28pXOiv1iQYILyQv79yYqG5HrfvvOgG5UTg4zPCglQQSd7k2jpwrx3GmxTY65Y7UtBrhJwNByD2xrAgMBAAECggEAFraMfDNjllhq89tex5e27VRKbwPW3xMlgshBuinTES5sqTASOSK8WMaGbFjj8yccISuwtAu/UVHSGBKZimiGzVPpYecOYSGbW5bR+/8SaDMVcQt3YeWjL7DUTfL2Dod9+TD0zdnQhmTi7bb+a7KbM+mQblRKlhVDJ1CaEQFaWMR68+vQccndlnUeE7rz73xrNKsyOFqDVDQArVFCPmpADP2Xa6TOzSwhN9pKTu3mLB696X4n/Xopj9ZCOnDyAD5dAt6xxdG/a3or6WRzRO7pR5z7J5TOw24upsM9aiczjc7H61yIZHxtdO6StwzHEQlNxCmfuJ1Njk5bFxTuJ9cTcQKBgQDWzC/Y32+FDcbtwKzBlcbQmAA1xdcl/EGgKwB+RPo1svFuC1CuI0e+PmZTmfLR4SieJWtPlqEcuUsUyEO5LIn5MrQHI31YeARaAaenIMxtZuoCSi0+PTyJxGWhHgW1xZJzyf+p2Cicvxekx88RYXS0QJlJwxOT4Jpih2oq9wQkyQKBgQC+syKvVV6Y7WwOCSELhHjOpFCD14SM3FAGE4Xmnubi05NVptwOQzGfqEtsFIN3aQvk25gweWRUUxyq8mJGYt1eidmMxrMDcVyY/QHPBYuxz/wab/6CykFL4EVLrmYJEzH+PhNcV+o0X9eT0V+NiJRuUiYBJrdtj8opFdrkM1NlkwKBgQDCVg7cKptdSC+5H9+tbfNo+n0GKa8UYPyHCyDxHTs7pmCk7XvbcXQRfada8CgvF4WGP9itM10k/cgeT2pmeROD8QnMg6F+j2dwf5rNrPEH8lq6I553dzP0eUpx0RXddZmhRRsY8cccug+MOHLyCLhr9R47DFIEMuu7RUUbBk4rcQKBgHzQ5N/bwYnYxEO/h+hw8V1XQPe6RSCpRptjhd23nalTD/kcuKWBJ2a3kX4RQycSE13cuRTpL1jd+UKOWPJ23St2kHTKzPpw5UmhN+DXYWKlnf1z1iKm3Owbw19Qq6o+7RbabHOhe0KChKhUfvU1MumuTP+t5psIZSpVCqsYSPqPAoGAMlo5ZuaOgCkgp2mdWf/wRo2PwpmV120B1xLFTIT/F+P3Iuc8CFGAf6r8d+yjmfIO1srFSZ067JO6JY/jlGUPDYj0H5OzV4p/Cm8wVW8icgNhg4IRkB/FgzwtY/4+VyVF/FsQZ1l4FWjqz0YrxZyIvde6c4qJS4mKajgdS0No5Rw=";
        String cc = "hello";
        HybridResult result = HybridCodec.encrypt(cc.getBytes(StandardCharsets.UTF_8), KeyGenerator.toPublicKey(publicKey2), KeyGenerator.toPrivateKey(privateKey1));
        byte[] dd = HybridCodec.decrypt(result, KeyGenerator.toPublicKey(publicKey1), KeyGenerator.toPrivateKey(privateKey2));
        System.out.println(new String(dd, StandardCharsets.UTF_8));
    }
}